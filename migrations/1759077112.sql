--
-- UP
--

-- Language

CREATE TABLE public.language (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    lang               text                        NOT NULL,
    name               text                        NOT NULL
);

ALTER TABLE ONLY public.language ADD CONSTRAINT language_lang_key
    UNIQUE (lang);

ALTER TABLE ONLY public.language ADD CONSTRAINT language_lang_check
    CHECK (lang <> '' AND length(lang) <= 16);
ALTER TABLE ONLY public.language ADD CONSTRAINT language_name_check
    CHECK (name <> '' AND length(name) <= 32);

-- Website

CREATE TABLE public.website (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    host               text                        NOT NULL,
    name               text
);

ALTER TABLE ONLY public.website ADD CONSTRAINT website_host_key
    UNIQUE (host);

ALTER TABLE ONLY public.website ADD CONSTRAINT website_host_check
    CHECK (host <> '' AND length(host) <= 64);
ALTER TABLE ONLY public.website ADD CONSTRAINT website_name_check
    CHECK (name <> '' AND length(name) <= 64);

-- link

CREATE TABLE public.link (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    website_id         bigint                      NOT NULL,
    relative_reference text                        NOT NULL
);

ALTER TABLE ONLY public.link ADD CONSTRAINT link_website_id_fkey
    FOREIGN KEY (website_id) REFERENCES public.website(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.link ADD CONSTRAINT link_website_id_relative_reference_key
    UNIQUE (website_id, relative_reference);

ALTER TABLE ONLY public.link ADD CONSTRAINT link_relative_reference_check
    CHECK (relative_reference <> '' AND length(relative_reference) <= 255);

-- Image

CREATE TABLE public.image (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    ulid               uuid                        NOT NULL,
    link_id            bigint                      NOT NULL,
    alternative_text   text
);

ALTER TABLE ONLY public.image ADD CONSTRAINT image_link_id_fkey
    FOREIGN KEY (link_id) REFERENCES public.link(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.image ADD CONSTRAINT image_ulid_key
    UNIQUE (ulid);
ALTER TABLE ONLY public.image ADD CONSTRAINT image_link_id_key
    UNIQUE (link_id);

ALTER TABLE ONLY public.image ADD CONSTRAINT image_alternative_text_check
    CHECK (alternative_text <> '' AND length(alternative_text) <= 255);

-- Character

CREATE TABLE public.character (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    code               text                        NOT NULL,
    name               text                        NOT NULL
);

ALTER TABLE ONLY public.character ADD CONSTRAINT character_code_key
    UNIQUE (code);

ALTER TABLE ONLY public.character ADD CONSTRAINT character_code_check
    CHECK (code <> '' AND length(code) <= 12);
ALTER TABLE ONLY public.character ADD CONSTRAINT character_name_check
    CHECK (name <> '' AND length(name) <= 64);

-- Person

CREATE TABLE public.person (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    code               text                        NOT NULL,
    name               text                        NOT NULL
);

ALTER TABLE ONLY public.person ADD CONSTRAINT person_code_key
    UNIQUE (code);

ALTER TABLE ONLY public.person ADD CONSTRAINT person_code_check
    CHECK (code <> '' AND length(code) <= 12);
ALTER TABLE ONLY public.person ADD CONSTRAINT person_name_check
    CHECK (name <> '' AND length(name) <= 64);

-- Magazine

CREATE TABLE public.magazine (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    code               text                        NOT NULL,
    name               text                        NOT NULL
);

ALTER TABLE ONLY public.magazine ADD CONSTRAINT magazine_code_key
    UNIQUE (code);

ALTER TABLE ONLY public.magazine ADD CONSTRAINT magazine_code_check
    CHECK (code <> '' AND length(code) <= 12);
ALTER TABLE ONLY public.magazine ADD CONSTRAINT magazine_name_check
    CHECK (name <> '' AND length(name) <= 32);

-- Category Type

CREATE TABLE public.category_type (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    code               text                        NOT NULL,
    name               text                        NOT NULL
);

ALTER TABLE ONLY public.category_type ADD CONSTRAINT category_type_code_key
    UNIQUE (code);

ALTER TABLE ONLY public.category_type ADD CONSTRAINT category_type_code_check
    CHECK (code <> '' AND length(code) <= 32);
ALTER TABLE ONLY public.category_type ADD CONSTRAINT category_type_name_check
    CHECK (name <> '' AND length(name) <= 32);

-- Category

CREATE TABLE public.category (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    type_id            bigint                      NOT NULL,
    code               text                        NOT NULL,
    name               text                        NOT NULL,
    parent_id          bigint
);

ALTER TABLE ONLY public.category ADD CONSTRAINT category_type_id_fkey
    FOREIGN KEY (type_id) REFERENCES public.category_type(id);
ALTER TABLE ONLY public.category ADD CONSTRAINT category_parent_id_fkey
    FOREIGN KEY (parent_id) REFERENCES public.category(id) ON DELETE SET NULL;

ALTER TABLE ONLY public.category ADD CONSTRAINT category_type_id_code_key
    UNIQUE (type_id, code);

ALTER TABLE ONLY public.category ADD CONSTRAINT category_code_check
    CHECK (code <> '' AND length(code) <= 32);
ALTER TABLE ONLY public.category ADD CONSTRAINT category_name_check
    CHECK (name <> '' AND length(name) <= 32);

-- Tag Type

CREATE TABLE public.tag_type (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    code               text                        NOT NULL,
    name               text                        NOT NULL
);

ALTER TABLE ONLY public.tag_type ADD CONSTRAINT tag_type_code_key
    UNIQUE (code);

ALTER TABLE ONLY public.tag_type ADD CONSTRAINT tag_type_code_check
    CHECK (code <> '' AND length(code) <= 32);
ALTER TABLE ONLY public.tag_type ADD CONSTRAINT tag_type_name_check
    CHECK (name <> '' AND length(name) <= 32);

-- Tag

CREATE TABLE public.tag (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    type_id            bigint                      NOT NULL,
    code               text                        NOT NULL,
    name               text                        NOT NULL
);

ALTER TABLE ONLY public.tag ADD CONSTRAINT tag_type_id_fkey
    FOREIGN KEY (type_id) REFERENCES public.tag_type(id);

ALTER TABLE ONLY public.tag ADD CONSTRAINT tag_type_id_code_key
    UNIQUE (type_id, code);

ALTER TABLE ONLY public.tag ADD CONSTRAINT tag_code_check
    CHECK (code <> '' AND length(code) <= 32);
ALTER TABLE ONLY public.tag ADD CONSTRAINT tag_name_check
    CHECK (name <> '' AND length(name) <= 32);

-- Comic

CREATE TABLE public.comic (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    code               text                        NOT NULL,
    published_from     timestamp with time zone,
    published_to       timestamp with time zone,
    total_chapter      integer,
    total_volume       integer,
    nsfw               smallint,
    nsfl               smallint
);

ALTER TABLE ONLY public.comic ADD CONSTRAINT comic_code_key
    UNIQUE (code);

ALTER TABLE ONLY public.comic ADD CONSTRAINT comic_code_check
    CHECK (code <> '' AND length(code) <= 12);
ALTER TABLE ONLY public.comic ADD CONSTRAINT comic_total_chapter_check
    CHECK (total_chapter > 0);
ALTER TABLE ONLY public.comic ADD CONSTRAINT comic_total_volume_check
    CHECK (total_volume > 0);
ALTER TABLE ONLY public.comic ADD CONSTRAINT comic_nsfw_check
    CHECK (nsfw >= -1 AND nsfw <= 1);
ALTER TABLE ONLY public.comic ADD CONSTRAINT comic_nsfl_check
    CHECK (nsfl >= -1 AND nsfl <= 1);

-- Comic Title

CREATE TABLE public.comic_title (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    ulid               uuid                        NOT NULL,
    language_id        bigint                      NOT NULL,
    content            text                        NOT NULL,
    is_synonym         boolean,
    is_latinized       boolean
);

ALTER TABLE ONLY public.comic_title ADD CONSTRAINT comic_title_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_title ADD CONSTRAINT comic_title_language_id_fkey
    FOREIGN KEY (language_id) REFERENCES public.language(id);

ALTER TABLE ONLY public.comic_title ADD CONSTRAINT comic_title_comic_id_ulid_key
    UNIQUE (comic_id, ulid);

ALTER TABLE ONLY public.comic_title ADD CONSTRAINT comic_title_content_check
    CHECK (content <> '' AND length(content) < 255);

-- Comic Cover

CREATE TABLE public.comic_cover (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    image_id           bigint                      NOT NULL
);

ALTER TABLE ONLY public.comic_cover ADD CONSTRAINT comic_cover_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_cover ADD CONSTRAINT comic_cover_image_id_fkey
    FOREIGN KEY (image_id) REFERENCES public.image(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_cover ADD CONSTRAINT comic_cover_comic_id_image_id_key
    UNIQUE (comic_id, image_id);

-- Comic Synopsis

CREATE TABLE public.comic_synopsis (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    ulid               uuid                        NOT NULL,
    language_id        bigint                      NOT NULL,
    content            text                        NOT NULL,
    source             text
);

ALTER TABLE ONLY public.comic_synopsis ADD CONSTRAINT comic_synopsis_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_synopsis ADD CONSTRAINT comic_synopsis_language_id_fkey
    FOREIGN KEY (language_id) REFERENCES public.language(id);

ALTER TABLE ONLY public.comic_synopsis ADD CONSTRAINT comic_synopsis_comic_id_ulid_key
    UNIQUE (comic_id, ulid);

ALTER TABLE ONLY public.comic_synopsis ADD CONSTRAINT comic_synopsis_content_check
    CHECK (content <> '' AND length(content) < 2040);
ALTER TABLE ONLY public.comic_synopsis ADD CONSTRAINT comic_synopsis_source_check
    CHECK (source <> '' AND length(source) < 32);

-- Comic Character

CREATE TABLE public.comic_character (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    character_id       bigint                      NOT NULL,
    is_main            boolean
);

ALTER TABLE ONLY public.comic_character ADD CONSTRAINT comic_character_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_character ADD CONSTRAINT comic_character_character_id_fkey
    FOREIGN KEY (character_id) REFERENCES public.character(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_character ADD CONSTRAINT comic_character_comic_id_character_id_key
    UNIQUE (comic_id, character_id);

-- Comic Author Position

CREATE TABLE public.comic_author_position (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    code               text                        NOT NULL,
    name               text                        NOT NULL
);

ALTER TABLE ONLY public.comic_author_position ADD CONSTRAINT comic_author_position_code_key
    UNIQUE (code);

ALTER TABLE ONLY public.comic_author_position ADD CONSTRAINT comic_author_position_code_check
    CHECK (code <> '' AND length(code) <= 12);
ALTER TABLE ONLY public.comic_author_position ADD CONSTRAINT comic_author_position_name_check
    CHECK (name <> '' AND length(name) <= 32);

-- Comic Author

CREATE TABLE public.comic_author (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    position_id        bigint                      NOT NULL,
    person_id          bigint                      NOT NULL
);

ALTER TABLE ONLY public.comic_author ADD CONSTRAINT comic_author_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_author ADD CONSTRAINT comic_author_position_id_fkey
    FOREIGN KEY (position_id) REFERENCES public.comic_author_position(id);
ALTER TABLE ONLY public.comic_author ADD CONSTRAINT comic_author_person_id_fkey
    FOREIGN KEY (person_id) REFERENCES public.person(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_author ADD CONSTRAINT comic_author_comic_id_position_id_person_id_key
    UNIQUE (comic_id, position_id, person_id);

-- Comic Serialization

CREATE TABLE public.comic_serialization (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    magazine_id        bigint                      NOT NULL
);

ALTER TABLE ONLY public.comic_serialization ADD CONSTRAINT comic_serialization_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_serialization ADD CONSTRAINT comic_serialization_magazine_id_fkey
    FOREIGN KEY (magazine_id) REFERENCES public.magazine(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_serialization ADD CONSTRAINT comic_serialization_comic_id_magazine_id_key
    UNIQUE (comic_id, magazine_id);

-- Comic External

CREATE TABLE public.comic_external (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    link_id            bigint                      NOT NULL,
    is_official        boolean,
    is_community       boolean
);

ALTER TABLE ONLY public.comic_external ADD CONSTRAINT comic_external_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_external ADD CONSTRAINT comic_external_link_id_fkey
    FOREIGN KEY (link_id) REFERENCES public.link(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_external ADD CONSTRAINT comic_external_comic_id_link_id_key
    UNIQUE (comic_id, link_id);

-- Comic Volume

CREATE TABLE public.comic_volume (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    number             decimal(10, 2)              NOT NULL,
    released_at        timestamp with time zone
);

ALTER TABLE ONLY public.comic_volume ADD CONSTRAINT comic_volume_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_volume ADD CONSTRAINT comic_volume_comic_id_number_version_key
    UNIQUE (comic_id, number);

-- Comic Volume Title

CREATE TABLE public.comic_volume_title (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    volume_id          bigint                      NOT NULL,
    ulid               uuid                        NOT NULL,
    language_id        bigint                      NOT NULL,
    content            text                        NOT NULL,
    is_synonym         boolean,
    is_latinized       boolean
);

ALTER TABLE ONLY public.comic_volume_title ADD CONSTRAINT comic_volume_title_volume_id_fkey
    FOREIGN KEY (volume_id) REFERENCES public.comic_volume(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_volume_title ADD CONSTRAINT comic_volume_title_language_id_fkey
    FOREIGN KEY (language_id) REFERENCES public.language(id);

ALTER TABLE ONLY public.comic_volume_title ADD CONSTRAINT comic_volume_title_volume_id_ulid_key
    UNIQUE (volume_id, ulid);

ALTER TABLE ONLY public.comic_volume_title ADD CONSTRAINT comic_volume_title_content_check
    CHECK (content <> '' AND length(content) < 255);

-- Comic Volume Cover

CREATE TABLE public.comic_volume_cover (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    volume_id          bigint                      NOT NULL,
    image_id           bigint                      NOT NULL
);

ALTER TABLE ONLY public.comic_volume_cover ADD CONSTRAINT comic_volume_cover_volume_id_fkey
    FOREIGN KEY (volume_id) REFERENCES public.comic_volume(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_volume_cover ADD CONSTRAINT comic_volume_cover_image_id_fkey
    FOREIGN KEY (image_id) REFERENCES public.image(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_volume_cover ADD CONSTRAINT comic_volume_cover_volume_id_image_id_key
    UNIQUE (volume_id, image_id);

-- Comic Chapter

CREATE TABLE public.comic_chapter (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    number             decimal(10, 2)              NOT NULL,
    version            text,
    released_at        timestamp with time zone,
    volume_id          bigint
);

ALTER TABLE ONLY public.comic_chapter ADD CONSTRAINT comic_chapter_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_chapter ADD CONSTRAINT comic_chapter_link_id_fkey
    FOREIGN KEY (volume_id) REFERENCES public.comic_volume(id) ON DELETE SET NULL;

ALTER TABLE ONLY public.comic_chapter ADD CONSTRAINT comic_chapter_comic_id_number_version_key
    UNIQUE NULLS NOT DISTINCT (comic_id, number, version);

ALTER TABLE ONLY public.comic_chapter ADD CONSTRAINT comic_chapter_version_check
    CHECK (version <> '' AND length(version) < 32);

-- Comic Chapter Title

CREATE TABLE public.comic_chapter_title (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    chapter_id         bigint                      NOT NULL,
    ulid               uuid                        NOT NULL,
    language_id        bigint                      NOT NULL,
    content            text                        NOT NULL,
    is_synonym         boolean,
    is_latinized       boolean
);

ALTER TABLE ONLY public.comic_chapter_title ADD CONSTRAINT comic_chapter_title_chapter_id_fkey
    FOREIGN KEY (chapter_id) REFERENCES public.comic_chapter(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_chapter_title ADD CONSTRAINT comic_chapter_title_language_id_fkey
    FOREIGN KEY (language_id) REFERENCES public.language(id);

ALTER TABLE ONLY public.comic_chapter_title ADD CONSTRAINT comic_chapter_title_chapter_id_ulid_key
    UNIQUE (chapter_id, ulid);

ALTER TABLE ONLY public.comic_chapter_title ADD CONSTRAINT comic_chapter_title_content_check
    CHECK (content <> '' AND length(content) < 255);

-- Comic Category

CREATE TABLE public.comic_category (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    category_id        bigint                      NOT NULL
);

ALTER TABLE ONLY public.comic_category ADD CONSTRAINT comic_category_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_category ADD CONSTRAINT comic_category_category_id_fkey
    FOREIGN KEY (category_id) REFERENCES public.category(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_category ADD CONSTRAINT comic_category_comic_id_category_id_key
    UNIQUE (comic_id, category_id);

-- Comic Tag

CREATE TABLE public.comic_tag (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    comic_id           bigint                      NOT NULL,
    tag_id             bigint                      NOT NULL
);

ALTER TABLE ONLY public.comic_tag ADD CONSTRAINT comic_tag_comic_id_fkey
    FOREIGN KEY (comic_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_tag ADD CONSTRAINT comic_tag_tag_id_fkey
    FOREIGN KEY (tag_id) REFERENCES public.category(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_tag ADD CONSTRAINT comic_tag_comic_id_tag_id_key
    UNIQUE (comic_id, tag_id);

-- Comic Relation Type

CREATE TABLE public.comic_relation_type (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    code               text                        NOT NULL,
    name               text                        NOT NULL
);

ALTER TABLE ONLY public.comic_relation_type ADD CONSTRAINT comic_relation_type_code_key
    UNIQUE (code);

ALTER TABLE ONLY public.comic_relation_type ADD CONSTRAINT comic_relation_type_code_check
    CHECK (code <> '' AND length(code) <= 32);
ALTER TABLE ONLY public.comic_relation_type ADD CONSTRAINT comic_relation_type_name_check
    CHECK (name <> '' AND length(name) <= 32);

-- Comic Relation

CREATE TABLE public.comic_relation (
    id                 bigint                      PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_at         timestamp with time zone    NOT NULL DEFAULT timezone('UTC', now()),
    updated_at         timestamp with time zone,

    parent_id          bigint                      NOT NULL,
    type_id            bigint                      NOT NULL,
    child_id           bigint                      NOT NULL
);

ALTER TABLE ONLY public.comic_relation ADD CONSTRAINT comic_relation_parent_id_fkey
    FOREIGN KEY (parent_id) REFERENCES public.comic(id) ON DELETE CASCADE;
ALTER TABLE ONLY public.comic_relation ADD CONSTRAINT comic_relation_type_id_fkey
    FOREIGN KEY (type_id) REFERENCES public.comic_relation_type(id);
ALTER TABLE ONLY public.comic_relation ADD CONSTRAINT comic_relation_child_id_fkey
    FOREIGN KEY (child_id) REFERENCES public.comic(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.comic_relation ADD CONSTRAINT comic_relation_parent_id_type_id_child_id_key
    UNIQUE (parent_id, type_id, child_id);

--
-- DOWN
--

DROP TABLE public.comic_relation;
DROP TABLE public.comic_relation_type;
DROP TABLE public.comic_tag;
DROP TABLE public.comic_category;
DROP TABLE public.comic_chapter_title;
DROP TABLE public.comic_chapter;
DROP TABLE public.comic_volume_cover;
DROP TABLE public.comic_volume_title;
DROP TABLE public.comic_volume;
DROP TABLE public.comic_external;
DROP TABLE public.comic_serialization;
DROP TABLE public.comic_author;
DROP TABLE public.comic_author_position;
DROP TABLE public.comic_character;
DROP TABLE public.comic_synopsis;
DROP TABLE public.comic_cover;
DROP TABLE public.comic_title;
DROP TABLE public.comic;
DROP TABLE public.tag;
DROP TABLE public.tag_type;
DROP TABLE public.category;
DROP TABLE public.category_type;
DROP TABLE public.magazine;
DROP TABLE public.person;
DROP TABLE public.character;
DROP TABLE public.image;
DROP TABLE public.link;
DROP TABLE public.website;
DROP TABLE public.language;
